// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("Domain.Entities.Commentator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Commentators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Erman",
                            LastName = "Yaşar"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Orkun",
                            LastName = "Çolakoğlu"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Gökhan",
                            LastName = "Abdik"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CommentatorMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommentatorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MatchId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommentatorId");

                    b.HasIndex("MatchId");

                    b.ToTable("CommentatorMatchs");
                });

            modelBuilder.Entity("Domain.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Attendance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwayId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AwayImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("AwayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AwayUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Awaygoalcount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Awaygoals")
                        .HasColumnType("TEXT");

                    b.Property<int>("Btts2hgPotential")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BttsFhgPotential")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BttsPotential")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoachAId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoachBId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Corner2hCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CornerFhCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateUnix")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Goalcount2hg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Goals2hgTeamA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Goals2hgTeamB")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Goaltimingdisabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HomeImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Homegoalcount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Homegoals")
                        .HasColumnType("TEXT");

                    b.Property<int>("HtGoalsTeamA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HtGoalsTeamB")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Htgoalcount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatchUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoHomeAway")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Overallgoalcount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RefereeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RevisedGameWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Season")
                        .HasColumnType("TEXT");

                    b.Property<string>("StadiumName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamA2hCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamA2hCorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAAttacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamACardsNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamACorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamADangerousAttacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAFhCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAFhCorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAFouls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAFreekicks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAGoalkicks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAOffsides")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAPenaltiesWon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAPenaltyGoals")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAPenaltyMissed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAPossession")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamARedCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAShots")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAShotsofftarget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAShotsontarget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAThrowins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamAYellowCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamB2hCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamB2hCorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBAttacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBCardsNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBCorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBDangerousAttacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBFhCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBFhCorners")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBFouls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBFreekicks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBGoalkicks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBOffsides")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBPenaltiesWon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBPenaltyGoals")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBPenaltyMissed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBPossession")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBRedCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBShots")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBShotsofftarget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBShotsontarget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBThrowins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamBYellowCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Total2hCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalFhCards")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Totalcornercount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Totalgoalcount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Winningteam")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("Domain.Entities.CommentatorMatch", b =>
                {
                    b.HasOne("Domain.Entities.Commentator", "Commentator")
                        .WithMany()
                        .HasForeignKey("CommentatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commentator");

                    b.Navigation("Match");
                });
#pragma warning restore 612, 618
        }
    }
}
